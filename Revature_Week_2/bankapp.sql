CREATE USER bankapp
IDENTIFIED BY revature
DEFAULT TABLESPACE users
TEMPORARY TABLESPACE temp
QUOTA 10M ON users;

GRANT connect to bankapp;
GRANT resource to bankapp;
GRANT create session TO bankapp;
GRANT create table TO bankapp;
GRANT create view TO bankapp;

CREATE TABLE USER_ACCT(
USER_ACCT_ID NUMBER(5),
ACCT_TYPE_ID NUMBER(5),
TRANS_ID NUMBER(5),
BALANCE NUMBER(9,2),
CONSTRAINT PK_USER_ACCT_ID PRIMARY KEY (USER_ACCT_ID),
CONSTRAINT FK_ACCT_TYPE_ID FOREIGN KEY (ACCT_TYPE_ID) REFERENCES ACCOUNT_TYPE ON DELETE SET NULL,
CONSTRAINT FK_TRANS_ID FOREIGN KEY (TRANS_ID) REFERENCES TRANSACTIONS ON DELETE SET NULL 
);

CREATE TABLE CLIENT(
ACCTID NUMBER(5),
USERNAME VARCHAR2(25),
FIRSTNAME VARCHAR2(25),
LASTNAME VARCHAR2(25),
PASSWORD VARCHAR2(25),
CONSTRAINT PK_ACCTID PRIMARY KEY (ACCTID)
);

CREATE TABLE ACCOUNTS(
ACCTID NUMBER(5),
USER_ACCT_ID NUMBER(5),
CONSTRAINT FK_ACCOUNT_ID FOREIGN KEY (ACCTID) REFERENCES CLIENT ON DELETE SET NULL,
CONSTRAINT FK_USER_ACCT_ID FOREIGN KEY (USER_ACCT_ID) REFERENCES USER_ACCT ON DELETE SET NULL
);

CREATE TABLE TRANSACTIONS(
TRANS_ID NUMBER(5),
TRANS_TYPE_ID NUMBER(5),
TRANS_DATE DATE,
AMOUNT NUMBER (7,2),
CONSTRAINT PK_TRANS_ID PRIMARY KEY (TRANS_ID)
--,
--CONSTRAINT FK_TRANS_TYPE_ID FOREIGN KEY (TRANS_TYPE_ID) REFERENCES TRANS_TYPE ON DELETE SET NULL
);
CREATE TABLE TRANS_TYPE(
TRANS_TYPE_ID NUMBER(5),
CHECK_BAL VARCHAR2(5),
WITHDRAWAL VARCHAR2(5),
DEPOSIT VARCHAR2(5),
CONSTRAINT PK_TRANS_TYPE_ID PRIMARY KEY (TRANS_TYPE_ID)
);

CREATE TABLE ACCOUNT_TYPE(
ACCT_TYPE_ID NUMBER (5),
CHECKING VARCHAR(25),
SAVINGS VARCHAR(25),
CONSTRAINT PK_ACCT_TYPE_ID PRIMARY KEY (ACCT_TYPE_ID)
);

--///////////////////////////////////////////////////////////---
CREATE SEQUENCE CLIENT_SEQ
MINVALUE 1
MAXVALUE 99999999
INCREMENT BY 1
START WITH 1;

CREATE OR REPLACE TRIGGER CLIENT_ADD
BEFORE INSERT ON CLIENT
FOR EACH ROW

BEGIN
    SELECT CLIENT_SEQ.NEXTVAL
    INTO :new.ACCTID
    FROM dual;
END;
/

CREATE SEQUENCE ACCOUNTS_SEQ
MINVALUE 1
MAXVALUE 99999999
INCREMENT BY 1
START WITH 1;
DROP TRIGGER ACCOUNT_ADD;
CREATE OR REPLACE TRIGGER ACCOUNT_ADD
BEFORE INSERT ON USER_ACCT
FOR EACH ROW

BEGIN
    SELECT ACCOUNTS_SEQ.NEXTVAL
    INTO :new.USER_ACCT_ID
    FROM dual;
END;
/

CREATE OR REPLACE PROCEDURE OPEN_ACCOUNT(
in_client_username IN CLIENT.USERNAME%TYPE,
in_client_first IN CLIENT.FIRSTNAME%TYPE,
in_client_last IN CLIENT.LASTNAME%TYPE,
in_client_password IN CLIENT.PASSWORD%TYPE

)
IS
BEGIN

INSERT INTO CLIENT(USERNAME,FIRSTNAME,LASTNAME,PASSWORD) VALUES(in_client_username,in_client_first,in_client_last,in_client_password);
INSERT INTO USER_ACCT(BALANCE) VALUES(0.00);
INSERT INTO ACCOUNTS VALUES(CLIENT_SEQ.CURRVAL,ACCOUNTS_SEQ.CURRVAL);
END;
/


BEGIN
OPEN_ACCOUNT('teetee','tee','tee','llama');
END;
/